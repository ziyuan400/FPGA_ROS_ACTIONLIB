% Encoding: UTF-8

@Article{Goehringer2013,
  author    = {Diana Göhringer and Lukas Meder and Oliver Oey and Jürgen Becker},
  title     = {Reliable and adaptive network-on-chip architectures for cyber physical systems},
  journal   = {{ACM} Transactions on Embedded Computing Systems},
  year      = {2013},
  volume    = {12},
  number    = {1s},
  pages     = {1--21},
  month     = {mar},
  doi       = {10.1145/2435227.2435247},
  file      = {:Articles/Reliable and Adaptive Network-on-Chip Architectures for Cyber.pdf:PDF},
  owner     = {Julian Haase},
  publisher = {Association for Computing Machinery ({ACM})},
  timestamp = {2018-03-22},
}

@InProceedings{Dally2001,
  author    = {W. J. Dally and B. Towles},
  title     = {Route packets, not wires: on-chip interconnection networks},
  booktitle = {Proceedings of the 38th Design Automation Conference (IEEE Cat. No.01CH37232)},
  year      = {2001},
  pages     = {684-689},
  abstract  = {Using on-chip interconnection networks in place of ad-hoc global wiring structures the top level wires on a chip and facilitates modular design. With this approach, system modules (processors, memories, peripherals, etc...) communicate by sending packets to one another over the network. The structured network wiring gives well-controlled electrical parameters that eliminate timing iterations and enable the use of high-performance circuits to reduce latency and increase bandwidth. The area overhead required to implement an on-chip network is modest, we estimate 6.6%. This paper introduces the concept of on-chip networks, sketches a simple network, and discusses some challenges in the architecture and design of these networks.},
  doi       = {10.1109/DAC.2001.156225},
  file      = {:InProceedings/Route Packets, Not Wires On-Chip Interconnection Networks.pdf:PDF},
  issn      = {0738-100X},
  keywords  = {CMOS digital integrated circuits;circuit optimisation;crosstalk;integrated circuit interconnections;integrated circuit layout;modules;wiring;area overhead;electrical parameters;latency;modular design;on-chip interconnection networks;system modules;timing iterations;top level wires;Bandwidth;Circuits;Communication system control;Digital signal processing chips;Logic;Multiprocessor interconnection networks;Network-on-a-chip;Tiles;Wires;Wiring},
  owner     = {Julian Haase},
  timestamp = {2018-03-19},
  url       = {http://ieeexplore.ieee.org/document/935594/},
}

@Book{Ogras2013,
  title     = {Modeling, Analysis and Optimization of Network-on-Chip Communication Architectures},
  publisher = {Springer Netherlands},
  year      = {2013},
  author    = {Umit Y. Ogras and Radu Marculescu},
  doi       = {10.1007/978-94-007-3958-1},
  file      = {:Books/Modeling, Analysis and Optimization of Network-on-Chip Communication Architectures.pdf:PDF},
  owner     = {Julian Haase},
  timestamp = {2018-03-26},
}

@PhdThesis{Logvinenko2014,
  author      = {Logvinenko, Alexander},
  title       = {Optimierung von Networks-on-Chip mit Hilfe der dynamischen Rekonfiguration},
  year        = {2014},
  type        = {phdthesis},
  abstract    = {Modern processors are developed modularly. Therefore new developments need not be re-scheduled from the scratch; rather prefabricated components - so-called IP blocks (Intellectual Property blocks) - can be used.
In order to connect the individual IPs, a reconfigurable architecture for network-on-chip has been developed: Reconfigurable Multi-Interconnection Network (RecMIN). It is able to adapt to the current traffic situation of the network.
The developed architecture consists of single reconfigurable cells. In addition, the reconfiguration architecture has a higher degree of reuse for the hardware structures, such as regarding buffer, multiplexer. This means that the components of the previously active topology are actively used also after the reconfiguration to the new topology.
In order to enable the simulation of the reconfiguration architecture, a simulation program RecSim was implemented.
Finally, three algorithms are presented that observe the behavior of the RecMIN and perform a reconfiguration when needed. In this way the network topology is to remain optimally adapted to the traffic even if the load changes.
The results of the simulation showed that the proposed reconfigurable network structure has the potential to improve the performance of some applications, especially those which switch between two or more traffic proles. For some applications RecMIN-architecture would significantly reduce paket delays (up to factor seven) (see chapter 6).
For the hardware realization of the RecMIN-architecture on FPGA a Xilinx-FPGA with FIFO-buffer concept is recommended, as one of the best solutions for the RecMin realization. However, if circular buffer is chosen for RecMIN, which mostly makes sense for high packet traffic, the choice between Altera- and Xilinx-FPGAs would have to be made individually, for each specific case, based on the data from the images 7.9 - 7.11.
The comparison between the three suggested reconfiguration algorithms provides the following conclusion:
ŋ-algorithm can be used in computer simulations to compare the results achieved from other algorithms. However, integrating the ŋ-algorithm into a SoC is attended with hardware complexity.
Minimal-Queues-Algorithm (MQA) is faster than the ŋ-algorithm and requires less area on the SoC. It can be integrated into SoC with less hardware complexity than ŋ-algorithm. The MQA is a best solution in case that foreknowledge about the nerwork traffic are not available.
The Pattern-Identication-Algorithm (PIA) is faster than the ŋ-algorithm and the Minimal-Queue-Algorithm. In case of properly implementation of the pattern for the PIA, the PIA is the most efficient of three algorithms proposed in this work.},
  date        = {2014-09-08},
  file        = {:Dissertations/Diss_Logvinenko.pdf:PDF},
  institution = {Bergische Universität Wuppertal},
  language    = {Deutsch},
  location    = {Wuppertal},
  owner       = {Julian Haase},
  timestamp   = {2018-03-19},
  url         = {http://elpub.bib.uni-wuppertal.de/servlets/DocumentServlet?id=4910},
  urldate     = {2018-03-19},
}

@TechReport{Rantala2006,
  author      = {Rantala, Ville and Lehtonen, Teijo and Plosila, Juha},
  title       = {Network on Chip Routing Algorithms},
  institution = {Turku Centre for Computer Science},
  year        = {2006},
  number      = {779},
  abstract    = {Network on Chip (NoC) is a new paradigm to make the interconnections
inside a System on Chip (SoC) system. In traditional solutions
interconnections are realized using a bus structure. While integration
increases the bus structure does not meet the needs of the new
technology. Bus starts to be narrow and in the worst case it begins to
block traffic. In NoC technology the bus structure is replaced
with a network which is a lot similar to the Internet. Segments
communicate with each other by sending packetized data over this
network.

Just like a computer network, a NoC network consists of devices that
use the network, routers that direct the traffic between devices and
wires that connect devices to routers and routers to other routers.
In the network design of the NoC the most essential things are a
network topology and a routing algorithm. Routers route the packets
based on the algorithm that they use. There are many kind of different
algorithms for different systems to choose. Every system has its own
requirements for the routing algorithm.

This report looks through the basics of networking on Network on Chip
systems and presents proposed routing algorithms to be used on NoCs.
In the end of the report the proposed router architectures are also
presented.},
  file        = {:TechReport/Network on Chip Routing Algorithms.pdf:PDF},
  isbn        = {952-12-1764-2},
  keywords    = {Network on Chip, routing algorithm, router architecture},
  owner       = {Julian Haase},
  publisher   = {Turku Centre for Computer Science},
  series      = {TUCS Technical Reports},
  timestamp   = {2018-04-18},
  url         = {http://tucs.fi/publications/view/?pub_id=tRaLePl06a},
}

@Comment{jabref-meta: databaseType:bibtex;}
@article{greenwade93,
    author  = "George D. Greenwade",
    title   = "The {C}omprehensive {T}ex {A}rchive {N}etwork ({CTAN})",
    year    = "1993",
    journal = "TUGBoat",
    volume  = "14",
    number  = "3",
    pages   = "342--351"
}
@article{JiangYingtao2004,
abstract = {The 1-bit full adder circuit is a very important component in the design of application specific integrated circuits. This paper presents a novel low-power multiplexer-based 1-bit full adder that uses 12 transistors (MBA-12T). In addition to reduced transition activity and charge recycling capability, this circuit has no direct connections to the power-supply nodes, leading to a noticeable reduction in short-current power consumption. Intensive HSPICE simulation shows that the new adder has more than 26{\%} in power savings over conventional 28-transistor CMOS adder and it consumes 23{\%} less power than 10-transistor adders (SERF [1] and 10T [4]) and is 64{\%} faster. {\textcopyright} 2004, The Institute of Electrical and Electronics Engineers, Inc. All rights reserved.},
author = {Jiang, Yingtao and Al-Sheraidah, Abdulkarim and Wang, Yuke and Sha, Edwin and Chung, Jin Gyun},
doi = {10.1109/TCSII.2004.831429},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Jiang et al. - 2004 - A Novel Multiplexer-Based Low-Power Full Adder.pdf:pdf},
issn = {15583791},
journal = {IEEE Transactions on Circuits and Systems II: Express Briefs},
keywords = {Full adder,low power,multiplexer,very large-scale integrated (VLSI) circuit},
mendeley-groups = {Actionlib/Circuits},
number = {7},
pages = {345--348},
title = {{A Novel Multiplexer-Based Low-Power Full Adder}},
volume = {51},
year = {2004}
}
@article{Thapliyal2010,
abstract = {The existing design of reversible n-bit binary comparator that compares two n-bit numbers is a serial design [1] having the latency of O(n). In this work, we present a new reversible n-bit binary comparator based on binary tree structure that has the latency of O(log2(n)). The reversible designs are based on a new reversible gate called the TR gate, the improved quantum cost of which is also derived in this work. In the proposed reversible binary tree comparator each node consists of a 2-bit reversible binary comparator that can compare two 2-bit numbers x(xi, xi-1) and y(yi, yi-1), to generate two 1-bit outputs Y and Z. Y will be 1 if x(xi, xi-1){\textgreater} y(yi, yi-1), and Z will be 1 if x(xi, xi-1){\textless}y(yi, y i-1). After careful analysis, we modified the logic equations of Y = x1ȳ1 + kx0ȳ0 and Z = x̄1y1 + kx̄0y0 to Y = x1ȳ1 ⊕ kx0ȳ0 and Z = x̄1y1 ⊕ kx̄0y0, respectively. The replacement of + operator with ⊕ operator without affecting the functionality of the design helped us in reversible mapping of the equations of Y and Z on the third output of the TR gate which is R=AB̄ ⊕ C. Further, TR gate can also efficiently generate functions such as x0ȳ0 and x̄0y0. In the proposed reversible binary comparator, the leaf nodes will consist of 2-bit reversible binary comparators. Each internal node (2-bit reversible binary comparator) of the binary tree receives the partial comparison results from the left and the right children and propagates the 2-bit output of the comparison to its parent. Finally, the root node which is also a 2-bit reversible binary comparator generates the 2-bit result of the comparison of the n-bit numbers x and y to evaluate whether x{\textgreater}y or x{\textless}y. The 2-bit result of the root node are passed to the reversible output circuit designed from a Toffoli gate and 4 NOT gates to generate three signals O0(x{\textless}y), O1(x{\textgreater}y) and O2(x=y). {\textcopyright}2010 IEEE.},
author = {Thapliyal, Himanshu and Ranganathan, Nagarajan and Ferreira, Ryan},
doi = {10.1109/NANO.2010.5697872},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Thapliyal, Ranganathan, Ferreira - 2010 - Design of a comparator tree based on reversible logic.pdf:pdf},
isbn = {9781424470334},
journal = {2010 10th IEEE Conference on Nanotechnology, NANO 2010},
mendeley-groups = {Actionlib/Circuits},
number = {c},
pages = {1113--1116},
publisher = {IEEE},
title = {{Design of a comparator tree based on reversible logic}},
year = {2010}
}
@article{Zagan2019,
abstract = {The task context switch operation, the inter-task synchronization and communication mechanisms, as well as the jitter occurred in treating aperiodic events, are crucial factors in implementing real-time operating systems (RTOS). In practice and literature, several solutions can be identified for improving the response speed and performance of real-time systems. Software implementations of RTOS-specific functions can generate significant delays, adversely affecting the deadlines required for certain applications. This paper presents an original implementation of a dedicated processor, based on multiple pipeline registers, and a hardware support for a dynamic scheduler with the following characteristics: performs unitary event management, provides access to architecture shared resources, prioritizes and executes the multiple events expected by the same task. The paper also presents a method through which interrupts are assigned to tasks. Through dedicated instructions, the integrated hardware scheduler implements tasks synchronization with multiple prioritized events, thus ensuring an efficient functioning of the processor in the context of real-time control.},
author = {Zagan, Ionel and Găitan, Vasile Gheorghiţă},
doi = {10.3390/electronics8020211},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Zagan, Găitan - 2019 - Hardware RTOS Custom scheduler implementation based on multiple pipeline registers and MIPS32 architecture.pdf:pdf},
issn = {20799292},
journal = {Electronics (Switzerland)},
keywords = {FPGA,Operating system,Real-time systems,Task scheduling},
mendeley-groups = {Actionlib/Circuits},
number = {2},
title = {{Hardware RTOS: Custom scheduler implementation based on multiple pipeline registers and MIPS32 architecture}},
volume = {8},
year = {2019}
}
@article{Chervenak1999,
abstract = {An analog superconducting circuit for multiplexing the superconducting quantum interference device (SQUID) readout of large format arrays of transition-edge sensors is described. The multiplex readout of eight SQUID channels with a first-generation multiplexer chip is presented. The success of these instruments has created a need for larger arrays with multiplexed readout.},
author = {Chervenak, J. A. and Irwin, K. D. and Grossman, E. N. and Martinis, John M. and Reintsema, C. D. and Huber, M. E.},
doi = {10.1063/1.123255},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Chervenak et al. - 1999 - Superconducting multiplexer for arrays of transition edge sensors.pdf:pdf},
issn = {00036951},
journal = {Applied Physics Letters},
mendeley-groups = {Actionlib/Circuits},
number = {26},
pages = {4043--4045},
title = {{Superconducting multiplexer for arrays of transition edge sensors}},
volume = {74},
year = {1999}
}
@article{TangYi2015,
abstract = {A hardware scheduler is developed to improve real-time performance of soft-core processor based computing systems. A hardware scheduler typically accelerates system performance at the cost of increased hardware resources, inflexibility and integration difficulty. However, the reprogrammability of FPGA-based systems removes the problems of inflexibility and integration difficulty. This paper introduces a new task-queue architecture to better support practical task controls and maintain good resource scaling. The scheduler can be configured to support various algorithms such as time sliced priority scheduling, Earliest Deadline First and Least Slack Time. The hardware scheduler reduces scheduling overhead by more than 1,000 clock cycles and raises the system utilization bound by a maximum 19.2 percent. Scheduling jitter is reduced from hundreds of clock cycles in software to just two or three cycles for most operations. The additional resource cost is no more than 17 percent of a typical softcore system for a small scale embedded application.},
author = {Tang, Yi and Bergmann, Neil W.},
doi = {10.1109/TC.2014.2315637},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Tang, Bergmann - 2015 - A hardware scheduler based on task queues for FPGA-based embedded real-time systems.pdf:pdf},
issn = {00189340},
journal = {IEEE Transactions on Computers},
keywords = {FPGA,priority queue,real-time systems,task scheduling},
mendeley-groups = {Actionlib/RTOS},
number = {5},
pages = {1254--1267},
publisher = {IEEE},
title = {{A hardware scheduler based on task queues for FPGA-based embedded real-time systems}},
volume = {64},
year = {2015}
}
@book{Scheduling_Handbook,
abstract = {Abstract Particle swarm optimization has gained increasing popularity in the past 15 years. Its effectiveness and efficiency has rendered it a valuable metaheuristic approach in various scientific fields where complex optimization problems appear. Its simplicity has made it accessible to the non-expert researchers, while the potential for easy adaptation of operators and integration of new procedures allows its application on a wide variety of problems with diverse characteristics. Additionally, its inherent decentralized nature allows easy parallelization, taking advantage of modern high-performance computer systems. The present work exposes the basic concepts of particle swarm optimization and presents a number of popular variants that opened new research directions by introducing novel ideas in the original model of the algorithm. The focus is placed on presenting the essential information of the algorithms rather than covering all the details. Also, a large number of references and sources is provided for further inquiry. Thus, the present text can serve as a starting point for researchers interested in the development and application of particle swarm optimization and its variants. Keywords},
author = {Profile, S E E},
booktitle = {Handbook of Heuristics},
doi = {10.1007/978-3-319-07153-4},
file = {:home/ziyuan/Documents/Actionlib/Algorithm/scheduling.pdf:pdf},
isbn = {9783319071534},
mendeley-groups = {Actionlib/Algorithm},
number = {January},
title = {{Handbook of Heuristics}},
year = {2016}
}
@article{Pravin18,
author = {Frp, Svfkrxgkdul Jpdlo and Vdlg, Lqwhooljhqwo and Kdv, Dufklwhfwxuh and Dssolfdwlrqv, Zlgh and Ghshqgv, V Vwhp and Vrph, R Q and Xqsuhglfwdeoh, Xqfhuwdlq},
file = {:home/ziyuan/Documents/Actionlib/Applications/FPGA-Based{\_}Adaptive{\_}Task{\_}Scheduler{\_}for{\_}Real{\_}Time{\_}Embedded{\_}Systems.pdf:pdf},
mendeley-groups = {Actionlib/Applications},
pages = {16--19},
title = {{( PEHGGHG 6 $\backslash$ VWHPV}}
}
@article{Fernando2010,
abstract = {Hardware implementation of genetic algorithms (GAs) is gaining importance because of their proven effectiveness as optimization engines for real-time applications (e.g., evolvable hardware). Earlier hardware implementations suffer from major drawbacks such as absence of GA parameter programmability, rigid predefined system architecture, and lack of support for multiple fitness functions. In this paper, we report the design of an IP core that implements a general-purpose GA engine that addresses these problems. Specifically, the proposed GA IP core can be customized in terms of the population size, number of generations, crossover and mutation rates, random number generator seed, and the fitness function. It has been successfully synthesized and verified on a Xilinx Virtex II Pro Field programmable gate arrays device (xc2vp30-7ff896) with only 13{\%} logic slice utilization, 1{\%} block memory utilization for GA memory, and a clock speed of 50 MHz. The GA core has been used as a search engine for real-time adaptive healing but can be tailored to any given application by interfacing with the appropriate application-specific fitness evaluation module as well as the required storage memory and by programming the values of the desired GA parameters. The core is soft in nature i.e., a gate-level netlist is provided which can be readily integrated with the user's system. The performance of the GA core was tested using standard optimization test functions. In the hardware experiments, the proposed core either found the globally optimum solution or found a solution that was within 3.7{\%} of the value of the globally optimal solution. The experimental test setup including the GA core achieved a speedup of around 5.16{\$}\backslash,\backslashtimes{\$} over an analogous software implementation. {\textcopyright} 2006 IEEE.},
author = {Fernando, Pradeep R. and Katkoori, Srinivas and Keymeulen, Didier and Zebulum, Ricardo and Stoica, Adrian},
doi = {10.1109/TEVC.2009.2025032},
file = {:home/ziyuan/Documents/Actionlib/Framework/Customizable{\_}FPGA{\_}IP{\_}Core{\_}Implementation{\_}of{\_}a{\_}General-Purpose{\_}Genetic{\_}Algorithm{\_}Engine.pdf:pdf},
issn = {1089778X},
journal = {IEEE Transactions on Evolutionary Computation},
keywords = {Evolvable hardware,Field programmable gate arrays,Genetic algorithm,IP core},
mendeley-groups = {Actionlib/Framework},
number = {1},
pages = {133--149},
publisher = {IEEE},
title = {{Customizable FPGA IP core implementation of a general-purpose genetic algorithm engine}},
volume = {14},
year = {2010}
}
@article{Montanno2010,
abstract = {Implementing floating-point (FP) Fast Fourier Transforms (FFT) on Field Programmable Gate Arrays (FPGAs) still represents a challenging task. The limited resources on target devices coupled with the inherent complexity of the FFT are among factors limiting widespread utilization. This paper presents the design of a scalable, FP FFT core for synthesis on Xilinx FPGAs. Its architecture uses a radix-2 Pease formulation scalable in the number of points, operand precision, number of butterflies, and transform direction. A bottom-up methodology documents the design of its internal components. Results of resource consumption and performance up to 116 megapoints per second were obtained, evaluating all implementable scenarios in single and double precision IEEE-754 standard. {\textcopyright} 2010 IEEE.},
author = {Montan{\~{n}}o, V{\'{i}}ctor and Jim{\'{e}}nez, Manuel},
doi = {10.1109/MWSCAS.2010.5548751},
file = {:home/ziyuan/Documents/Actionlib/Framework/Design{\_}and{\_}implementation{\_}of{\_}a{\_}scalable{\_}floating-point{\_}FFT{\_}IP{\_}core{\_}for{\_}Xilinx{\_}FPGAs.pdf:pdf},
isbn = {9781424477715},
issn = {15483746},
journal = {Midwest Symposium on Circuits and Systems},
mendeley-groups = {Actionlib/Framework},
pages = {533--536},
title = {{Design and implementation of a scalable floating-point FFT IP core for Xilinx FPGAs}},
year = {2010}
}
@article{Reggiani2021,
abstract = {Stencil-based algorithms are a relevant class of computational kernels in high-performance systems, as they appear in a plethora of fields, from image processing to seismic simulations, from numerical methods to physical modeling. Among the various incarnations of stencil-based computations, Iterative Stencil Loops (ISLs) and Convolutional Neural Networks (CNNs) represent two well-known examples of kernels belonging to the stencil class. Indeed, ISLs apply the same stencil several times until convergence, while CNN layers leverage stencils to extract features from an image. The computationally intensive essence of ISLs, CNNs, and in general stencil-based workloads, requires solutions able to produce efficient implementations in terms of throughput and power efficiency. In this context, FPGAs are ideal candidates for such workloads, as they allow design architectures tailored to the stencil regular computational pattern. Moreover, the ever-growing need for performance enhancement leads FPGA-based architectures to scale to multiple devices to benefit from a distributed acceleration. For this reason, we propose a library of HDL components to effectively compute ISLs and CNNs inference on FPGA, along with a scalable multi-FPGA architecture, based on custom PCB interconnects. Our solution eases the design flow and guarantees both scalability and performance competitive with state-of-the-art works.},
author = {Reggiani, Enrico and {Del Sozzo}, Emanuele and Conficconi, Davide and Natale, Giuseppe and Moroni, Carlo and Santambrogio, Marco D.},
doi = {10.1145/3461478},
file = {:home/ziyuan/Documents/Actionlib/Framework/Enhancing the Scalability of Multi-FPGA Stencil.pdf:pdf},
issn = {19367414},
journal = {ACM Transactions on Reconfigurable Technology and Systems},
keywords = {CNN,HDL,Multi-FPGA,Stencil computation},
mendeley-groups = {Actionlib/Framework},
number = {3},
title = {{Enhancing the scalability of multi-FPGA stencil computations via highly optimized HDL components}},
volume = {14},
year = {2021}
}
@article{Fernandes2011,
abstract = {The inherent parallelism of the logic resources, the flexibility in its configuration and the performance at high processing frequencies makes the field programmable gate array (FPGA) the most suitable device to be used both for real time algorithm processing and data transfer in instrumentation modules. Moreover, the reconfigurability of these FPGA based modules enables exploiting different applications on the same module. When using a reconfigurable module for various applications, the availability of a common interface library for easier implementation of the algorithms on the FPGA leads to more efficient development. The FPGA configuration is usually specified in a hardware description language (HDL) or other higher level descriptive language. The critical paths, such as the management of internal hardware clocks that require deep knowledge of the module behavior shall be implemented in HDL to optimize the timing constraints. The common interface library should include these critical paths, freeing the application designer from hardware complexity and able to choose any of the available high-level abstraction languages for the algorithm implementation. With this purpose a modular Verilog code was developed for the Virtex 4 FPGA of the in-house Transient Recorder and Processor (TRP) hardware module, based on the Advanced Telecommunications Computing Architecture (ATCA), with eight channels sampling at up to 400 MSamples/s (MSPS). The TRP was designed to perform real time Pulse Height Analysis (PHA), Pulse Shape Discrimination (PSD) and Pile-Up Rejection (PUR) algorithms at a high count rate (few Mevent/s). A brief description of this modular code is presented and examples of its use as an interface with end user algorithms, including a PHA with PUR, are described. {\textcopyright} 2006 IEEE.},
author = {Fernandes, Ana M. and Pereira, R. C. and Sousa, J. and Batista, A. J.N. and Combo, A. and Carvalho, B. B. and Correia, C. M.B.A. and Varandas, C. A.F.},
doi = {10.1109/TNS.2011.2151875},
file = {:home/ziyuan/Documents/Actionlib/Framework/HDL{\_}Based{\_}FPGA{\_}Interface{\_}Library{\_}for{\_}Data{\_}Acquisition{\_}and{\_}Multipurpose{\_}Real{\_}Time{\_}Algorithms.pdf:pdf},
issn = {00189499},
journal = {IEEE Transactions on Nuclear Science},
keywords = {ATCA,FPGA,data acquisition,real time processing,reconfigurable Hardware},
mendeley-groups = {Actionlib/Framework},
number = {4 PART 1},
pages = {1526--1530},
publisher = {IEEE},
title = {{HDL based FPGA interface library for data acquisition and multipurpose real time algorithms}},
volume = {58},
year = {2011}
}
@article{Mathwork,
file = {:home/ziyuan/Documents/Actionlib/Framework/Mathwork{\_}Xilinx{\_}WhitePaper.pdf:pdf},
mendeley-groups = {Actionlib/Framework},
title = {{Model-Based Design with Simulink , HDL Coder , and Xilinx System Generator for DSP By Kiran Kintali and Yongfeng Gu}}
}
@article{Hennessy2019,
author = {Hennessy, John L. and Patterson, David A.},
doi = {10.1145/3282307},
file = {:home/ziyuan/Documents/Actionlib/General/A new golden age for computer architecture.pdf:pdf},
issn = {15577317},
journal = {Communications of the ACM},
mendeley-groups = {Actionlib/General},
number = {2},
pages = {48--60},
title = {{A new golden age for computer architecture}},
volume = {62},
year = {2019}
}
@article{Djordjevic1996,
abstract = {The multiprocessor scheduling problem can be stated as finding a schedule for a task graph to be executed on a multiprocessor architecture so that the execution time can be minimized. Since this problem is known to be NP-hard, in all but a few very restricted cases, the main research efforts in this area are focused on heuristic methods for obtaining near-optimal solutions in a reasonable amount of time. A new compile-time single-pass multiprocessor scheduling technique, called chaining, has been developed and is presented in this paper. Chaining takes into account the communication overhead and can be applied to scheduling task graphs onto fully-connected multiprocessor architectures containing an arbitrary (bounded as well as an unbounded) number of processors. This technique can be viewed as a generalized list scheduling concept, that does not impose any preconditions about the ordering in which tasks are selected for scheduling as well as about the position within the current partial schedule where selected task can be placed. Varying the selection policy, implemented in this technique, we are able to generate a class of scheduling algorithms. As a representative example of this class we present Task Selection First (TSF) scheduler. We compare performances of the TSF scheduler with the dynamic level scheduler proposed by Sih and Lee, the dominant sequence clustering algorithm proposed by Yang and Gerasoulis, and the DSC/MLS algorithm, a modified version of Sarkar's two-step scheduling technique.},
author = {Djordjevi{\'{c}}, Goran Lj and To{\v{s}}i{\'{c}}, Milorad B.},
doi = {10.1016/S0167-8191(96)00041-5},
file = {:home/ziyuan/Documents/Actionlib/Hardware/A heuristic for scheduling task graphs with commmunication delays onto multiprocessors.pdf:pdf},
issn = {01678191},
journal = {Parallel Computing},
keywords = {Chaining,Interprocessor communication,List scheduling,Multiprocessor scheduling,Parallel processing,Task graph},
mendeley-groups = {Actionlib/Hardware},
number = {9},
pages = {1197--1214},
title = {{A heuristic for scheduling task graphs with communication delays onto multiprocessors}},
volume = {22},
year = {1996}
}
@article{Ibarra1977,
abstract = {The finishing time properties of several heuristic algorithms for scheduling n independent tasks on m nonidentical processors are studied. In particular, for m = 2 an n log n time-bounded algorithm is given which generates a schedule having a finishing time of at most (√5 + 1)/2 of the optimal finishing time. A simplified scheduling problem involving identical processors and restricted task sets is shown to be P-complete. However, the LPT algorithm applied to this problem yields schedules which are near optimal for large n. {\textcopyright} 1977, ACM. All rights reserved.},
author = {Ibarra, Oscar H. and Kim, Chul E.},
doi = {10.1145/322003.322011},
file = {:home/ziyuan/Documents/Actionlib/Hardware/Heuristic Algorithms for Scheduling Independent Tasks on Nonidentical Processors.pdf:pdf},
issn = {1557735X},
journal = {Journal of the ACM (JACM)},
keywords = {4 32,5 39,and phrases finishing time,cr categories,heuristic algorithm,identical processors,lem,lpt schedule,nonidentical,p-complete prob-,processors,scheduling independent tasks,spt schedule,time complexity,time-bounded algorithm},
mendeley-groups = {Actionlib/Hardware},
number = {2},
pages = {280--289},
title = {{Heuristic Algorithms for Scheduling Independent Tasks on Nonidentical Processors}},
volume = {24},
year = {1977}
}
@article{Cashmore2015,
abstract = {The Robot Operating System (ROS) is a set of software libraries and tools used to build robotic systems. ROS is known for a distributed and modular design. Given a model of the environment, task planning is concerned with the assembly of actions into a structure that is predicted to achieve goals. This can be done in a way that minimises costs, such as time or energy. Task planning is vital in directing the actions of a robotic agent in domains where a causal chain could lock the agent into a dead-end state. Moreover, planning can be used in less constrained domains to provide more intelligent behaviour. This paper describes the ROSPlan framework, an architecture for embedding task planning into ROS systems. We provide a description of the architecture and a case study in autonomous robotics. Our case study involves autonomous underwater vehicles in scenarios that demonstrate the flexibility and robustness of our approach.},
author = {Cashmore, Michael and Fox, Maria and Long, Derek and Magazzeni, Daniele and Ridder, Bram and Carrera, Arnau and Palomeras, Narc{\'{i}}s and Hurt{\'{o}}s, Nat{\`{a}}lia and Carreras, Marc},
file = {:home/ziyuan/Documents/Actionlib/ROS/13699-Article Text-17217-1-2-20201228.pdf:pdf},
isbn = {9781577357315},
issn = {23340843},
journal = {Proceedings International Conference on Automated Planning and Scheduling, ICAPS},
mendeley-groups = {Actionlib/ROS},
pages = {333--341},
title = {{Rosplan: Planning in the robot operating system}},
volume = {2015-January},
year = {2015}
}
@article{Zagan2020,
abstract = {The design of an RTOS (real-time operation system) kernel is mostly based on a preemptive scheduler that responds to events and interrupts according to the priorities. The hardware RTOS (HW-RTOS) concept includes a real-time scheduler which ensures a deterministic execution of a set of tasks by implementing in hardware the appropriate scheduling algorithms, similar to those of the RTOS. The contributions of this paper consist in presenting original methods that contribute to increasing the performance of the RTOS, to reduce the jitter effect by implementing a unified space of task and event priorities, to increase the execution factor and controlling the RTS (real-time system) scheduling limit, by implementing the real-time event handling unit.},
author = {Zagan, Ionel and Gaitan, Vasile Gheorghita},
doi = {10.1109/DAS49615.2020.9108930},
file = {:home/ziyuan/Documents/Actionlib/RTOS/Improving{\_}the{\_}performance{\_}of{\_}Real-Time{\_}Event{\_}Processing{\_}based{\_}on{\_}Preemptive{\_}Scheduler{\_}FPGA{\_}Implementation.pdf:pdf},
isbn = {9781728168708},
journal = {2020 15th International Conference on Development and Application Systems, DAS 2020 - Proceedings},
keywords = {Computer architecture,Field programmable gate arrays,Pipeline processing,Scheduling},
mendeley-groups = {Actionlib/RTOS},
pages = {49--55},
title = {{Improving the performance of Real-Time Event Processing based on Preemptive Scheduler FPGA Implementation}},
year = {2020}
}
@article{Wulf2020,
abstract = {Flash-based FPGAS are well suited for energy aware applications because they are liable to a much lower static energy consumption than SRAM-based FPGAS. The power consumption of Microsemi/Microchip devices is reduced even further due to a low-power mode called FlashFreeze. Neverthe-less, when many hardware tasks with different idle times share the same FPGA, the applicability of the FlashFreeze mode is reduced as only the complete FPGA can be put into FlashFreeze mode. In this paper, a scheduling algorithm called cluster scheduling is introduced that reduces the power con-sumption by clustering periodic hardware tasks and extending FlashFreeze periods under consideration of real-time constraints. The cluster scheduling algorithm can run standalone or it can be integrated into a real-time operating system. It is evaluated against an algorithm that switches to FlashFreeze mode whenever the FPGA is idle. Depending on the shifting variability of the hardware tasks, a prolongation of the FlashFreeze mode in the order of n can be reached with n given hardware tasks.},
author = {Wulf, Cornelia and Willig, Michael and G{\"{o}}hringer, Diana},
doi = {10.1109/NorCAS51424.2020.9265128},
file = {:home/ziyuan/Documents/Actionlib/RTOS/Low{\_}Power{\_}Scheduling{\_}of{\_}Periodic{\_}Hardware{\_}Tasks{\_}in{\_}Flash-Based{\_}FPGAs.pdf:pdf},
isbn = {9781728192260},
journal = {2020 IEEE Nordic Circuits and Systems Conference, NORCAS 2020 - Proceedings},
keywords = {flash freeze mode,flash-based FPGA,hardware task,low power scheduling},
mendeley-groups = {Actionlib/RTOS},
pages = {1--7},
title = {{Low Power Scheduling of Periodic Hardware Tasks in Flash-Based FPGAS}},
year = {2020}
}
@article{Witte2018,
author = {Witte, Thomas and Tichy, Matthias},
file = {:home/ziyuan/Documents/Actionlib/ROS/Checking consistency of robot software architectures in ROS.pdf:pdf},
isbn = {9781450357609},
keywords = {2018,acm reference format,checking consistency of robot,dynamic analysis,ros,roslaunch,software architecture description,thomas witte and matthias,tichy},
mendeley-groups = {Actionlib/ROS},
pages = {1--8},
title = {{Checking consistency of robot software architectures in ROS}},
year = {2018}
}
@article{Ritschel2019,
author = {Ritschel, Nico and Holmes, Reid and Garcia, Ronald and Shepherd, David C},
doi = {10.1109/RoSE.2019.00013},
file = {:home/ziyuan/Documents/Actionlib/ROS/Novice-Friendly Multi-Armed Robotics Programming.pdf:pdf},
isbn = {9781728122496},
mendeley-groups = {Actionlib/ROS},
title = {{Novice-Friendly Multi-Armed Robotics Programming}},
year = {2019}
}
@article{Podlubne2021,
author = {Podlubne, Ariel and Mey, Johannes and Sch{\"{o}}ne, Ren{\'{e}}},
doi = {10.1109/ACCESS.2021.3119061},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Podlubne, Mey, Sch{\"{o}}ne - 2021 - Model-Based Approach for Automatic Generation of Hardware Architectures for Robotics.pdf:pdf},
mendeley-groups = {Actionlib,Actionlib/ROS},
pages = {140921--140937},
title = {{Model-Based Approach for Automatic Generation of Hardware Architectures for Robotics}},
year = {2021}
}
@article{YangMing2018,
annote = {Ming Yang et al. has pointed out the inherently monolithically execution for CV applications in OpenVX and the inhibition in parallelism for real-time systems. They have developed a more fine-grained scheduling of OpenVX graphs.},
author = {Yang, Ming and Amert, Tanya and Yang, Kecheng and Otterness, Nathan and Anderson, James H and Smith, F Donelson and Wang, Shige},
doi = {10.1109/RTSS.2018.00018},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Yang et al. - 2018 - Making OpenVX Really “ Real Time ” ∗.pdf:pdf},
mendeley-groups = {Actionlib,Actionlib/Algorithm},
pages = {80--93},
publisher = {IEEE},
title = {{Making OpenVX Really “ Real Time ” ∗}},
year = {2018}
}
@article{Arora2021,
abstract = {FPGAs are well-suited for accelerating deep learning (DL) applications owing to the rapidly changing algorithms, network architectures and computation requirements in this field. However, the generic building blocks available on traditional FPGAs limit the acceleration that can be achieved. Many modifications to FPGA architecture have been proposed and deployed including adding specialized artificial intelligence (AI) processing engines, adding support for IEEE half-precision (fp16) math in DSP slices, adding hard matrix multiplier blocks, etc. In this paper, we describe replacing a small percentage of the FPGA's programmable logic area with Tensor Slices. These slices are arrays of processing elements at their heart that support multiple tensor operations, multiple dynamically-selectable precisions and can be dynamically fractured into individual adders, multipliers and MACs (multiply-and-accumulate). These tiles have a local crossbar at the inputs that helps with easing the routing pressure caused by a large slice. By spending ∼3{\%} of FPGA's area on Tensor Slices, we observe an average frequency increase of 2.45x and average area reduction by 0.41x across several ML benchmarks, including a TPU-like design, compared to an Intel Agilex-like baseline FPGA. We also study the impact of spending area on Tensor slices on non-ML applications. We observe an average reduction of 1{\%} in frequency and an average increase of 1{\%} in routing wirelength compared to the baseline, across the non-ML benchmarks we studied. Adding these ML-specific coarse-grained hard blocks makes the proposed FPGA a much efficient hardware accelerator for ML applications, while still keeping the vast majority of the real estate on the FPGA programmable at fine-grain.},
author = {Arora, Aman and Mehta, Samidh and Betz, Vaughn and John, Lizy K.},
doi = {10.1145/3431920.3439282},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Arora et al. - 2021 - Tensor Slices to the Rescue.pdf:pdf},
isbn = {9781450382182},
keywords = {FPGA,acceleration,acm reference format,computer architecture,deep learning,fpga,hardware,hardware acceleration,machine learning,neural networks,tensor slice},
mendeley-groups = {ACM{\_}FPGA22/late,Actionlib/Applications},
number = {2},
pages = {23--33},
title = {{Tensor Slices to the Rescue}},
year = {2021}
}
@article{Podlubne2018,
author = {Podlubne, Ariel and Diana, G},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Podlubne, Diana - Unknown - FPGA-ROS Methodology to Augment the Robot Operating System with FPGA Designs.pdf:pdf},
isbn = {9781728119571},
mendeley-groups = {Actionlib,Actionlib/ROS},
title = {{FPGA-ROS : Methodology to Augment the Robot Operating System with FPGA Designs}}
}
@article{Gandhi2005,
abstract = {Memory latency tolerant architectures support thousands of in-flight instructions without scaling cycle-critical processor resources, and thousands of useful instructions can complete in parallel with a miss to memory. These architectures however require large queues to track all loads and stores executed while a miss is pending. Hierarchical designs alleviate cycle time impact of these structures but the CAM and search functions required to enforce memory ordering and provide data forwarding place high demand on area and power. We present new load-store processing algorithms for latency tolerant architectures. We augment primary load and store queues with secondary buffers. The secondary load buffer is a set associative structure, similar to a cache. The secondary store buffer, the Store Redo Log, is a first-in first-out structure recording the program order of all stores completed in parallel with a miss, and has no CAM and search functions. Instead of the secondary store queue, a cache provides temporary forwarding. The SRL enforces memory ordering by ensuring memory updates occur in program order once the miss returns. The new algorithms eliminate the CAM and search functions in the secondary load and store buffers, and remove fundamental sources of complexity, power, and area inefficiency in load/store processing. The new organization, while being area and power efficient, is competitive in performance compared to hierarchical designs.},
author = {Gandhi, Amit and Akkary, Haitham and Rajwar, Ravi and Srinivasan, Srikanth T. and Lai, Konrad},
doi = {10.1145/1080695.1070007},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Gandhi et al. - 2005 - Scalable Load and Store Processing in Latency Tolerant Processors.pdf:pdf},
issn = {0163-5964},
journal = {ACM SIGARCH Computer Architecture News},
mendeley-groups = {Actionlib/Algorithm},
number = {2},
pages = {446--457},
title = {{Scalable Load and Store Processing in Latency Tolerant Processors}},
volume = {33},
year = {2005}
}
@article{JinShiyuan2008,
abstract = {Multiprocessor task scheduling is an important and computationally difficult problem. A large number of algorithms were proposed which represent various tradeoffs between the quality of the solution and the computational complexity and scalability of the algorithm. Previous comparison studies have frequently operated with simplifying assumptions, such as independent tasks, artificially generated problems or the assumption of zero communication delay. In this paper, we propose a comparison study with realistic assumptions. Our target problems are two well known problems of linear algebra: LU decomposition and Gauss-Jordan elimination. Both algorithms are naturally parallelizable but have heavy data dependencies. The communication delay will be explicitly considered in the comparisons. In our study, we consider nine scheduling algorithms which are frequently used to the best of our knowledge: min-min, chaining, A*, genetic algorithms, simulated annealing, tabu search, HLFET, ISH, and DSH with task duplication. Based on experimental results, we present a detailed analysis of the scalability, advantages and disadvantages of each algorithm. {\textcopyright} 2007 Springer Science+Business Media, LLC.},
author = {Jin, Shiyuan and Schiavone, Guy and Turgut, Damla},
doi = {10.1007/s11227-007-0139-z},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Jin, Schiavone, Turgut - 2008 - A performance study of multiprocessor task scheduling algorithms.pdf:pdf},
issn = {09208542},
journal = {Journal of Supercomputing},
keywords = {Communication delay,Heuristic algorithms,Parallel computing,Task scheduling},
mendeley-groups = {Actionlib/Algorithm},
number = {1},
pages = {77--97},
title = {{A performance study of multiprocessor task scheduling algorithms}},
volume = {43},
year = {2008}
}
@article{Vasile2014,
annote = {Mihaela-Andreea Vasile et.al.
o Singal server.
o Dynamic.
o Very heterogeous, need clustering.},
author = {Vasile, Mihaela-andreea and Pop, Florin and Tutueanu, Radu-ioan and Cristea, Valentin},
doi = {10.1016/j.future.2014.11.019},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Vasile et al. - 2014 - Resource-aware hybrid scheduling algorithm in heterogeneous distributed computing.pdf:pdf},
issn = {0167-739X},
journal = {Future Generation Computer Systems},
keywords = {resource provisioning},
mendeley-groups = {Actionlib,Actionlib/Algorithm},
publisher = {Elsevier B.V.},
title = {{Resource-aware hybrid scheduling algorithm in heterogeneous distributed computing}},
url = {http://dx.doi.org/10.1016/j.future.2014.11.019},
year = {2014}
}
@article{Saez1999,
abstract = {The problem of jointly scheduling both hard deadline periodic tasks and soft aperiodic tasks has been the subject of considerably research in real-time systems. One of the most widely accepted solutions for this problem are slack stealing algorithms. However, these algorithms are rather impractical, since they all imply a considerably scheduler overhead. This paper faces the overhead problem by introducing a complete hardware architecture that implements slack stealing in hardware using an optimal algorithm that has been completely redesigned to perform efficiently in hardware. The proposed solution is a circuit that behaves as a kind of sophisticated interrupt controller that takes the task workload and the interrupts as inputs, and provides an output to inform the CPU which is the highest priority task. From the point of view of hardware design, the algorithm involves two main problems: first, to select the highest priority task at every moment and, second, to locate a set of slack gaps in a real-time computation. Locating slack gaps in a real-time computation is a problem that requires to 'look forward in time' into the forecast schedule of a given workload. This paper presents a novel architecture that shows how to solve this problem in an efficient way using an event-driven simulation. A timing analysis of the proposed design is also presented.},
author = {Saez, Sergio and Vila, Joan and Crespo, Alfons and Garcia, Angel},
doi = {10.1109/isie.1999.801754},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Saez et al. - 1999 - Hardware scheduler for complex real-time systems.pdf:pdf},
isbn = {0780356624},
journal = {IEEE International Symposium on Industrial Electronics},
mendeley-groups = {Actionlib/RTOS},
pages = {43--48},
title = {{Hardware scheduler for complex real-time systems}},
volume = {1},
year = {1999}
}
@article{Kalms2019,
author = {B, Lester Kalms and Podlubne, Ariel and Diana, G},
doi = {10.1007/978-3-030-17227-5},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/B, Podlubne, Diana - 2019 - HiFlipVX An Open Source High-Level Synthesis FPGA Library for Image Processing.pdf:pdf},
isbn = {9783030172275},
keywords = {computer vision,fpga,high-level synthesis,image processing,openvx,soc},
mendeley-groups = {Actionlib,Actionlib/Applications},
pages = {149--164},
title = {{HiFlipVX : An Open Source High-Level Synthesis FPGA Library for Image Processing}},
year = {2019}
}
@article{GuoKaiyuan2018,
author = {Guo, Kaiyuan and Member, Student and Sui, Lingzhi and Qiu, Jiantao and Yu, Jincheng and Wang, Junbin and Yao, Song and Han, Song and Wang, Yu and Member, Senior and Yang, Huazhong and Member, Senior},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Guo et al. - 2018 - Angel-Eye A Complete Design Flow for Mapping CNN Onto Embedded FPGA.pdf:pdf},
mendeley-groups = {Actionlib,Actionlib/Applications},
number = {1},
pages = {35--47},
publisher = {IEEE},
title = {{Angel-Eye : A Complete Design Flow for Mapping CNN Onto Embedded FPGA}},
volume = {37},
year = {2018}
}
@article{Nowatzki,
author = {Nowatzki, Tony},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Nowatzki - Unknown - Hybrid Optimization Heuristic Instruction Scheduling for Programmable Accelerator Codesign.pdf:pdf},
isbn = {9781450359863},
mendeley-groups = {Actionlib,Actionlib/Algorithm},
title = {{Hybrid Optimization / Heuristic Instruction Scheduling for Programmable Accelerator Codesign}}
}
@inproceedings{GuoLicheng2022,
abstract = {FPGAs require a much longer compilation cycle than conventional computing platforms like CPUs. In this paper, we shorten the overall compilation time by co-optimizing the HLS compilation (C-to-RTL) and the back-end physical implementation (RTL-to-bitstream). We propose a split compilation approach based on the pipelining flexibility at the HLS level, which allows us to partition designs for parallel placement and routing then stitch the separate partitions together. We outline a number of technical challenges and address them by breaking the conventional boundaries between different stages of the traditional FPGA tool flow and reorganizing them to achieve a fast end-to-end compilation. Our research produces RapidStream, a parallelized and physical-integrated compilation framework that takes in an HLS dataflow program in C/C++ and generates a fully placed and routed implementation. When tested on the Xilinx U250 FPGA with a set of realistic HLS designs, RapidStream achieves a 5-7X reduction in compile time and up to 1.3X increase in frequency when compared to a commercial-off-the-shelf toolchain. In addition, we provide preliminary results using a customized open-source router to reduce the compile time up to an order of magnitude in the cases with lower performance requirements. The tool is open-sourced at github.com/Licheng-Guo/RapidStream.},
address = {New York, NY, USA},
author = {Guo, Licheng and Maidee, Pongstorn and Zhou, Yun and Lavin, Chris and Wang, Jie and Chi, Yuze and Qiao, Weikang and Kaviani, Alireza and Zhang, Zhiru and Cong, Jason},
booktitle = {Proceedings of the 2022 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays},
doi = {10.1145/3490422.3502361},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Guo et al. - 2022 - RapidStream Parallel Physical Implementation of FPGA HLS Designs.pdf:pdf},
isbn = {9781450391498},
keywords = {dataflow,fpga,hls,parallel,placement,routing},
mendeley-groups = {ACM{\_}FPGA22,ACM{\_}FPGA22/late,Actionlib/Hardware,Actionlib/ROS},
pages = {1--12},
publisher = {Association for Computing Machinery},
series = {FPGA '22},
title = {{RapidStream: Parallel Physical Implementation of FPGA HLS Designs}},
url = {https://doi.org/10.1145/3490422.3502361},
year = {2022}
}
@article{Nikolic2021,
abstract = {It takes only high-school physics to appreciate that the resistance of a wire grows with a diminishing cross section, and a quick look at any plot about Moore's law immediately suggests that such cross section must decrease over time. Clearly, everyone can easily imagine that this trend must have a deep influence on FPGA architectures. What is difficult to predict is whether and when well-established architectural ideas will break-and what can replace them. Unfortunately, in architectural research, we often use fairly simplistic models of the underlying technology nodes which limit our ability to visualize the detailed impact of technology evolution. In this paper, we develop, from the available industrial disclosures, a consistent electrical model of the metal stacks of recent and current technologies, as well as future trends. We combine it to a plausible layout strategy to have an accurate idea of how wire characteristics play nowadays into architectural decisions. To demonstrate our models, necessarily speculative due to the paucity of reliable industrial information, we use them to explore the evolution of a typical architectural family across technology nodes and to reevaluate one of the most basic design parameters-namely, cluster size. We notice effects which may in fact explain some recent changes in commercial architectures. We also observe how conventional architectures may fail to take advantage of the performance improvements of future nodes. Although conceptually straightforward, this study signals how profoundly our understanding of FPGAs will be affected by technology while moving towards the 3 nm node.},
author = {Nikoli{\'{c}}, Stefan and Catthoor, Francky and T{\AA}'kei, Zsolt and Ienne, Paolo},
doi = {10.1145/3431920.3439300},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Nikoli{\'{c}} et al. - 2021 - Global is the new local Fpga architecture at 5nm and beyond.pdf:pdf},
isbn = {9781450382182},
journal = {FPGA 2021 - 2021 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays},
keywords = {16nm,3nm,4nm,5nm,7nm,Area model,Capacitance,Channel,Cluster,Connection-block,Crossbar,Delay,Floorplan,Fpga,Global,Intercluster,Interconnect,Intracluster,Layout,Local,Multiplexer,Node,Resistance,Routing,Scaling,Switch-block,Technology,Wire},
mendeley-groups = {ACM{\_}FPGA22/late,Actionlib/General},
pages = {34--44},
title = {{Global is the new local: Fpga architecture at 5nm and beyond}},
year = {2021}
}
@article{Rainey,
author = {Rainey, Erik and Villarreal, Jesse and Pulli, Kari and Lepley, Thierry and Brill, Frank},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Rainey et al. - Unknown - Addressing System-Level Optimization with OpenVX Graphs.pdf:pdf},
mendeley-groups = {Actionlib,Actionlib/Algorithm},
title = {{Addressing System-Level Optimization with OpenVX Graphs}}
}
@article{Fowers2018,
author = {Fowers, Jeremy and Ovtcharov, Kalin and Papamichael, Michael and Massengill, Todd and Liu, Ming and Lanka, Sitaram and Reinhardt, Steven K and Caulfield, Adrian M and Chung, Eric S and Burger, Doug},
doi = {10.1109/ISCA.2018.00012},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Fowers et al. - 2018 - A Configurable Cloud-Scale DNN Processor for Real-Time AI.pdf:pdf},
mendeley-groups = {Actionlib,Actionlib/Applications},
publisher = {IEEE},
title = {{A Configurable Cloud-Scale DNN Processor for Real-Time AI}},
year = {2018}
}
@article{Adomat1996,
abstract = {Demands on real-time kernels increase every year: as applications grow larger and become more complex, real-time kernels must give short and predictable response. The RTU is a real-time kernel coprocessor implemented in an ASIC, which is intended to meet the growing expectations on real-time kernels. Since the RTU gives fast response times, it is necessary to define a detailed time-model to improve the understanding of the real-time kernel behaviour in the /spl mu/S-domain. In this paper, we describe how to use the RTU in a single-or multi-processor architecture and a time-model for a RTU based real-time system is defined. The time-model is considered with regards to determinism and performance. {\textcopyright} 1996 IEEE.},
author = {Adomat, J. and Furun{\"{a}}s, J. and Lindh, L. and St{\"{a}}rner, J.},
doi = {10.1109/EMWRTS.1996.557849},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Adomat et al. - 1996 - Real-time kernel in hardware RTU A step towards deterministic and high-performance real-time systems.pdf:pdf},
isbn = {0818674962},
issn = {10683070},
journal = {Proceedings - Euromicro Conference on Real-Time Systems},
keywords = {Real-Time kernel,Real-Time system,determinism,performance},
mendeley-groups = {Actionlib/Hardware},
pages = {164--168},
title = {{Real-time kernel in hardware RTU: A step towards deterministic and high-performance real-time systems}},
year = {1996}
}
@article{Bloom,
author = {Bloom, Gedare and Parmer, Gabriel},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Bloom, Parmer - Unknown - Shared Hardware Data Structures for Hard Real-Time Systems Categories and Subject Descriptors.pdf:pdf},
isbn = {9781450314251},
keywords = {hardware data structures,priority queue,schedulability},
mendeley-groups = {Actionlib/Hardware},
pages = {133--142},
title = {{Shared Hardware Data Structures for Hard Real-Time Systems Categories and Subject Descriptors}}
}
@article{Bansal2006,
abstract = {Scheduling of most of the parallel scientific applications demand simultaneous exploitation of task and data parallelism for efficient and effective utilization of system and other resources. Traditional optimization techniques, like optimal control-theoretic approaches, convex-programming, and bin-packing, have been suggested in the literature for dealing with the most critical processor allocation phase. However, their application onto the real world problems is not straightforward, which departs the solutions away from optimality. Heuristic based approaches, in contrast, work in the integer domain for the number of processors all through, and perform appreciably well. A two-step Modified Critical Path and Area-based (MCPA) scheduling heuristic is developed which targets at improving the processor allocation phase of an existing Critical Path and Area-based (CPA) scheduling algorithm. Strength of the suggested algorithm lies in bridging the gap between the processor allocation and task assignment phases of scheduling. It helps in making better processor allocations for data parallel tasks without sacrificing the essential task parallelism available in the application program. Performance of MCPA algorithm, in terms of normalized schedule length and speedup, is evaluated for random and real application task graph suites. It turns out to be much better than the parent CPA algorithm and comparable to the high complexity Critical Path Reduction (CPR) algorithm. {\textcopyright} 2006 Elsevier B.V. All rights reserved.},
author = {Bansal, Savina and Kumar, Padam and Singh, Kuldip},
doi = {10.1016/j.parco.2006.08.004},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Bansal, Kumar, Singh - 2006 - An improved two-step algorithm for task and data parallel scheduling in distributed memory machines.pdf:pdf},
issn = {01678191},
journal = {Parallel Computing},
keywords = {Data parallelism,Distributed systems,Mixed parallelism,Parallelizable tasks,Scheduling algorithm},
mendeley-groups = {Actionlib/Algorithm},
number = {10},
pages = {759--774},
title = {{An improved two-step algorithm for task and data parallel scheduling in distributed memory machines}},
volume = {32},
year = {2006}
}
@inproceedings{quigley2009ros,
  title={ROS: an open-source Robot Operating System},
  author={Quigley, Morgan and Conley, Ken and Gerkey, Brian and Faust, Josh and Foote, Tully and Leibs, Jeremy and Wheeler, Rob and Ng, Andrew Y and others},
  booktitle={ICRA workshop on open source software},
  volume={3},
  number={3.2},
  pages={5},
  year={2009},
  organization={Kobe, Japan}
}
@article{Stallings2008,
author = {Stallings, William},
file = {:home/ziyuan/Documents/Actionlib/General/Real-Time{\_}Operating{\_}Systems{\_}for{\_}Small{\_}Microcontrollers.pdf:pdf},
isbn = {0201770342},
journal = {Management},
mendeley-groups = {Actionlib/General},
number = {6},
pages = {1--7},
publisher = {IEEE},
title = {{P Ractice P Roblems O Perating S Ystems :}},
volume = {4},
year = {2008}
}
@article{Ferrandi2006,
abstract = {This paper aims at introducing a methodology that allows an easy implementation of IP-Cores focusing only on their functionalities rather than their interfaces and their integration in a given architecture. The proposed approach implements all the communication infrastructure needed by a component, described in VHDL, to be finally inserted into a real architecture that can be implemented on FPGAs, reducing the time to market of the final implementation of the system. To validate the entire methodology, we have performed a comparison based on the CoreConnect communication infrastructure, between our results with the classical Xilinx design flow using EDK and ISE. {\textcopyright} 2006 IEEE.},
author = {Ferrandi, Fabrizio and Ferrara, Giovanna and Palazzo, Roberto and Rana, Vincenzo and Santambrogio, Marco D.},
doi = {10.1109/IPDPS.2006.1639491},
file = {:home/ziyuan/Documents/Actionlib/Framework/VHDL{\_}to{\_}FPGA{\_}automatic{\_}IP-Core{\_}generation{\_}a{\_}case{\_}study{\_}on{\_}Xilinx{\_}design{\_}flow.pdf:pdf},
isbn = {1424400546},
journal = {20th International Parallel and Distributed Processing Symposium, IPDPS 2006},
mendeley-groups = {Actionlib,Actionlib/Framework},
pages = {13--16},
title = {{VHDL to FPGA automatic IP-Core generation: A case study on Xilinx design flow}},
volume = {2006},
year = {2006}
}
@article{Chen2016,
abstract = {This paper presents an architecture framework to easily design hardware accelerators that can effectively tolerate long and variable memory latency using prefetching and access/execute decoupling. Hardware accelerators are becoming increasingly popular in modern computing systems as a promising approach to achieve higher performance and energy efficiency when technology scaling is slowing down. However, today's high-performance accelerators require significant manual efforts to design, in large part due to the need to carefully orchestrate data transfers between external memory and an accelerator. Instead, the proposed framework utilizes automated program analysis along with High-Level Synthesis (HLS) tools to enable prefetching and access/execute decoupling with minimal manual efforts. The framework adds tags to accelerator memory accesses so that hardware prefetching can effectively preload data for accesses with regular patterns. To handle irregular memory accesses, the framework generates an accelerator with decoupled access/execute architecture using program slicing. Experimental results show that the proposed optimizations can significantly improve performance of HLS-generated accelerators (average speedup of 2.28x across eight accelerators) and often reduce energy consumption (average of 15{\%}).},
author = {Chen, Tao and {Edward Suh}, G.},
doi = {10.1109/MICRO.2016.7783749},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Chen, Edward Suh - 2016 - Efficient data supply for hardware accelerators with prefetching and accessexecute decoupling.pdf:pdf},
isbn = {9781509035083},
issn = {10724451},
journal = {Proceedings of the Annual International Symposium on Microarchitecture, MICRO},
mendeley-groups = {Actionlib/Applications},
title = {{Efficient data supply for hardware accelerators with prefetching and access/execute decoupling}},
volume = {2016-Decem},
year = {2016}
}
@article{Miyauchi2020,
abstract = {As IoT (Internet of Things) is prevailing, the number of devices which have strict resource constraints is increasing. In developing such a system, RTOS (Real Time Operating System) helps to increase productivity. However, in the view of cost reduction, it is desirable that resources for RTOS be small and the execution time be short. In this paper, we propose a method to develop an application-specific system with RTOS. Methods of removing unnecessary code for the application from RTOS kernel are explained. In addition, we implemented a reconfigurable hardware RTOS on an FPGA and applied the method for removing unnecessary code from the hardware implementation. The evaluation results show that the proposed methods reduce hardware resources, RTOS kernel execution time, and the size of the software parts in each application.},
author = {Miyauchi, Tetsuo and Tanaka, Kiyofumi},
doi = {10.2197/ipsjjip.28.395},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Miyauchi, Tanaka - 2020 - Building fine-grained configurable itron based rtos.pdf:pdf},
issn = {18826652},
journal = {Journal of Information Processing},
keywords = {Configuration,FPGA,RTOS,System call,µITRON},
mendeley-groups = {ACM{\_}FPGA22/late,Actionlib/RTOS},
pages = {395--405},
title = {{Building fine-grained configurable itron based rtos}},
volume = {28},
year = {2020}
}
@article{SunQiuyue2020,
abstract = {360° panoramic video provides an immersive Virtual Reality experience. However, rendering 360° videos consumes excessive energy on client devices. FPGA is an ideal offloading target to improve the energy-efficiency. However, a naive implementation of the processing algorithm would lead to an excessive memory footprint that offsets the energy benefit. In this paper, we propose an algorithmarchitecture co-designed system that dramatically reduces the onchip memory requirement of VR video processing to enable FPGA offloading. Evaluation shows that our system is able to achieve significant energy reduction with no loss of performance compared to today's off-the-shelf VR video rendering system.},
author = {Sun, Qiuyue and Taherin, Amir and Siatitse, Yawo and Zhu, Yuhao},
doi = {10.1145/3373087.3375317},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Sun et al. - 2020 - Energy-efficient 360-degree video rendering on FPGA via algorithm-architecture co-design.pdf:pdf},
isbn = {9781450370998},
journal = {FPGA 2020 - 2020 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays},
keywords = {Locality,Panoramic Video,Perspective Projection,Virtual Reality},
mendeley-groups = {Actionlib/Applications},
pages = {97--103},
title = {{Energy-efficient 360-degree video rendering on FPGA via algorithm-architecture co-design}},
year = {2020}
}
@article{Petersen2021,
abstract = {Novel applications have triggered significant changes at the system level of FPGA architecture design, such as the introduction of embedded VLIW processor arrays and hardened NoCs. However, the routing architecture of the soft logic fabric has largely remained unchanged in recent years. Since hunger for acceleration of ever more varied tasks with various power budgets-as well as complications related to technology scaling-is likely to remain significant, it is foreseeable that the routing architecture too will have to evolve. In this work, we do not try to suggest how routing architectures of tomorrow should look like. Instead, we analyze an existing architecture from a popular commercial FPGA family, discussing the possible origins of various design decisions and pointing out aspects that may merit future research. Moreover, we present an open-source tool that greatly eases such analyses, relying only on data readily available from the vendor CAD tools. Our hope is that this work will help the academic research community in catching up with the current developments in industry and accelerate its contributions to FPGA architectures of the future.},
author = {Petersen, Morten B. and Nikoli{\'{c}}, Stefan and Stojilovi{\'{c}}, Mirjana},
doi = {10.1145/3431920.3439285},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Petersen, Nikoli{\'{c}}, Stojilovi{\'{c}} - 2021 - NetCracker A peek into the routing architecture of xilinx 7-series fpgas.pdf:pdf},
isbn = {9781450382182},
journal = {FPGA 2021 - 2021 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays},
keywords = {Fpga,Programmable interconnect,Routing architecture},
mendeley-groups = {ACM{\_}FPGA22/late,Actionlib/Hardware},
pages = {11--22},
title = {{NetCracker: A peek into the routing architecture of xilinx 7-series fpgas}},
year = {2021}
}
@article{Leuenberger2021,
abstract = {Analog to digital converters (ADCs) are indispensable nowadays. Analog signals are digitized earlier and earlier in the processing chain to reduce the need for complex analog signal processing. For this reason, ADCs are often integrated directly into field-programmable gate arrays (FPGA) or microprocessors. However, such ADCs are designed for a specific set of requirements with limited flexibility. In this paper, a new structure of an FPGA-based ADC is proposed. The ADC is based on the slope ADC, where a time-to-digital converter (TDC) measures the time from the beginning of a reference slope until the slope reaches the voltage-to-be-measured. Only FPGA-internal elements are used to build the ADC. It is fully reconfigurable and does not require any external components. This innovation offers the flexibility to convert almost any digital input/output (I/O) into an ADC. Considering the very high number of digital I/O ports available in today's FPGA systems, this enables the construction of a massive and powerful ADC array directly on a standard FPGA. The proposed ADC has a resolution of 9.3 bit and achieves an effective number of bits (ENOB) of 7 at a sample rate of 600 MSample/s. The differential nonlinearity (DNL) ranges from-0.9 to 0.9 bit, and the integral nonlinearity (INL) is in the range between-1.1 and 0.9 bit. An alternative version of the ADC operates at 1.2 GSample/s and achieves an ENOB of 5.3.},
author = {Leuenberger, Lukas and Amiet, Dorian and Wei, Tao and Zbinden, Paul},
doi = {10.1145/3431920.3439287},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Leuenberger et al. - 2021 - An FPGA-based 7-ENOB 600 msamples adc without any external components.pdf:pdf},
isbn = {9781450382182},
journal = {FPGA 2021 - 2021 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays},
keywords = {Adc,Analog-to-digital converter,Fpga,Tdc,Time-to-digital converter},
mendeley-groups = {Actionlib/Applications},
pages = {240--250},
title = {{An FPGA-based 7-ENOB 600 msample/s adc without any external components}},
year = {2021}
}
@article{Conficconi2021,
abstract = {Image Registration is a highly compute-intensive optimization procedure that determines the geometric transformation to align a floating image to a reference one. Generally, the registration targets are images taken from different time instances, acquisition angles, and/or sensor types. Several methodologies are employed in the literature to address the limiting factors of this class of algorithms, among which hardware accelerators seem the most promising solution to boost performance. However, most hardware implementations are either closed-source or tailored to a specific context, limiting their application to different fields. For these reasons, we propose an open-source hardware-software framework to generate a configurable architecture for the most compute-intensive part of registration algorithms, namely the similarity metric computation. This metric is the Mutual Information, a well-known calculus from the Information Theory, used in several optimization procedures. Through different design parameters configurations, we explore several design choices of our highly-customizable architecture and validate it on multiple FPGAs. We evaluated various architectures against an optimized Matlab implementation on an Intel Xeon Gold, reaching a speedup up to 2.86x, and remarkable performance and power efficiency against other state-of-the-art approaches.},
author = {Conficconi, Davide and D'Arnese, Eleonora and {Del Sozzo}, Emanuele and Sciuto, Donatella and Santambrogio, Marco D.},
doi = {10.1145/3431920.3439291},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Conficconi et al. - 2021 - A framework for customizable fpga-based image registration accelerators.pdf:pdf},
isbn = {9781450382182},
journal = {FPGA 2021 - 2021 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays},
keywords = {Domain specific accelerator,Fpgas,Image registration,Mutual information,Reconfigurable computing},
mendeley-groups = {Actionlib/Applications},
pages = {251--261},
title = {{A framework for customizable fpga-based image registration accelerators}},
year = {2021}
}
@article{Mohan2021,
abstract = {In recent years, IC reverse engineering and IC fabrication supply chain security have grown to become significant economic and security threats for designers, system integrators, and end customers. Many of the existing logic locking and obfuscation techniques have shown to be vulnerable to attack once the attacker has access to the design netlist either through reverse engineering or through an untrusted fabrication facility. We introduce soft embedded FPGA redaction, a hardware obfuscation approach that allows the designer substitute security-critical IP blocks within a design with a synthesizable eFPGA fabric. This method fully conceals the logic and the routing of the critical IP and is compatible with standard ASIC flows for easy integration and process portability. To demonstrate eFPGA redaction, we obfuscate a RISC-V control path and a GPS P-code generator. We also show that the modified netlists are resilient to SAT attacks with moderate VLSI overheads. The secure RISC-V design has 1.89x area and 2.36x delay overhead while the GPS design has 1.39x area and negligible delay overhead when implemented on an industrial 22nm FinFET CMOS process.},
author = {Mohan, Prashanth and Atli, Oguz and Kibar, Onur and Zackriya, Mohammed and Pileggi, Larry and Mai, Ken},
doi = {10.1145/3431920.3439297},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Mohan et al. - 2021 - Top-down physical design of soft embedded fpga fabrics.pdf:pdf},
isbn = {9781450382182},
journal = {FPGA 2021 - 2021 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays},
keywords = {ASIC,Efpga,FPGA,Physical design,VLSI,VPR},
mendeley-groups = {ACM{\_}FPGA22/late,Actionlib/Hardware},
pages = {1--10},
title = {{Top-down physical design of soft embedded fpga fabrics}},
year = {2021}
}
@article{FuYao2017,
author = {Fu, Yao and Wu, Ephrem and Sirasao, Ashish and Attia, Sedny and Khan, Kamran and Wittig, Ralph},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Fu et al. - 2017 - Deep Learning with INT8 Optimization on Xilinx Devices INT8 for Deep Learning INT8 Deep Learning on Xilinx DSP Slices.pdf:pdf},
journal = {Wp486},
keywords = {Deep Learning,INT8,UltraScale,wp486},
mendeley-groups = {ACM{\_}FPGA22/late,Actionlib/Algorithm},
pages = {1--11},
title = {{Deep Learning with INT8 Optimization on Xilinx Devices INT8 for Deep Learning INT8 Deep Learning on Xilinx DSP Slices}},
volume = {486},
year = {2017}
}
@article{Koch2021,
abstract = {At the end of CMOS-scaling, the role of architecture design is increasingly gaining importance. Supporting this trend, customizable embedded FPGAs are an ingredient in ASIC architectures to provide the advantages of reconfigurable hardware exactly where and how it is most beneficial. To enable this, we are introducing the FABulous embedded open-source FPGA framework. FABulous is designed to fulfill the objectives of ease of use, maximum portability to different process nodes, good control for customization, and delivering good area, power, and performance characteristics of the generated FPGA fabrics. The framework provides templates for logic, arithmetic, memory, and I/O blocks that can be easily stitched together, whilst enabling users to add their own fully customized blocks and primitives. The FABulous ecosystem generates the embedded FPGA fabric for chip fabrication, integrates Yosys, ABC, VPR and nextpnr as FPGA CAD tools, deals with the bitstream generation and after fabrication tests. Additionally, we provide an emulation path for system development. FABulous was demonstrated for an ASIC integrating a RISC-V core with an embedded FPGA fabric for custom instruction set extensions using a TSMC 180nm process and an open-source 45nm process node.},
author = {Koch, Dirk and Dao, Nguyen and Healy, Bea and Yu, Jing and Attwood, Andrew},
doi = {10.1145/3431920.3439302},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Koch et al. - 2021 - FABulous An embedded fpga framework.pdf:pdf},
isbn = {9781450382182},
journal = {FPGA 2021 - 2021 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays},
keywords = {Cad tools,Efpgas,Embedded FPGAs,FPGAs,Open-source,Partial reconfiguration},
mendeley-groups = {ACM{\_}FPGA22/late,Actionlib/Hardware},
pages = {45--56},
title = {{FABulous: An embedded fpga framework}},
year = {2021}
}
@inproceedings{Schmit,
abstract = {In this paper, we present a new functional unit to replace the LUT in an FPGA-like computational fabric designed specifically for use to accelerate instance-specific sparse integer matrix multiplication. We use a suite of matrices, the VPR place-and-route tool, and modern architecture representations of the interconnect to examine this architectural idea. The new cell, called the K--ADD, increases density by 2.5x to 4x, and increases performance by 8{\%} to 30{\%} by simultaneously increasing the clock rate and reducing the number of cycles to compute the product. This benefit magnifies the two-orders-of-magnitude advantage of using instance-specific matrix multipliers demonstrated in prior work. We investigate the cluster size, N, across multiple technology nodes. In that investigation, we see a sustained benefit to a larger cluster size (N=8). This observation holds for both netlists mapped to a 6--LUT and to a 6--ADD, which implies this behavior has more to do with the peculiar structure of these matrix multiplication netlists, not the different functional unit.},
address = {New York, NY, USA},
author = {Schmit, Herman and Denton, Matthew},
booktitle = {Proceedings of the 2022 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays},
doi = {10.1145/3490422.3502352},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Schmit, Denton - 2022 - Multi-Input Serial Adders for FPGA-like Computational Fabric.pdf:pdf},
isbn = {9781450391498},
keywords = {bit-serial arithmetic,field-programmable gate arrays,instance-specific acceleration,reservoir computing,sparse matrix multiplication},
mendeley-groups = {ACM{\_}FPGA22,ACM{\_}FPGA22/late,Actionlib/Circuits},
pages = {35--41},
publisher = {Association for Computing Machinery},
series = {FPGA '22},
title = {{Multi-Input Serial Adders for FPGA-like Computational Fabric}},
url = {https://doi.org/10.1145/3490422.3502352},
year = {2022}
}
@article{Langhammer2021,
abstract = {The advent of AI has driven the adoption of high density low precision arithmetic on FPGAs. This has resulted in new methods in mapping both arithmetic functions as well as dataflows onto the fabric, as well as some changes to the embedded DSP Blocks. Technologies outside of the FPGA realm have also evolved, such as the addition of tensor structures for GPUs, and also the introduction of numerous AI ASSPs, all of which have a higher claimed performance and efficiency than current FPGAs. In this paper we will introduce the Stratix 10 NX device (NX), which is a variant of FPGA specifically optimized for the AI application space. In addition to the computational capabilities of the standard programmable soft logic fabric, a new type of DSP Block provides the dense arrays of low precision multipliers typically used in AI implementations. The architecture of the block is tuned for the common matrix-matrix or vector-matrix multiplications in AI, with capabilities designed to work efficiently for both small and large matrix sizes. The base precisions are INT8 and INT4, along with shared exponent support for support block floating point FP16 and FP12 numerics. All additions/accumulations can be done in INT32 or IEEE754 single precision floating point (FP32), and multiple blocks can be cascaded together to support larger matrices. We will also describe methods by which the smaller precision multipliers can be aggregated to create larger multiplier that are more applicable to standard signal processing requirements. In terms of overall compute throughput, Stratix 10 NX achieves 143 INT8/FP16 TOPs/FLOPs, or 286 INT4/FP12 TOPS/FLOPs at 600MHz. Depending on the configuration, power efficiency is in the range of 1-4 TOPs or TFLOPs/W.},
author = {Langhammer, Martin and Nurvitadhi, Eriko and Pasca, Bogdan and Gribok, Sergey},
doi = {10.1145/3431920.3439293},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Langhammer et al. - 2021 - Stratix 10 nx architecture and applications.pdf:pdf},
isbn = {9781450382182},
journal = {FPGA 2021 - 2021 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays},
keywords = {AI tensor block,Dot product,Stratix 10 NX},
mendeley-groups = {ACM{\_}FPGA22/late,Actionlib/General},
pages = {57--67},
title = {{Stratix 10 nx architecture and applications}},
year = {2021}
}
@article{ZhaYue2021,
abstract = {With field-programmable gate arrays (FPGAs) being widely deployed into data centers, an efficient virtualization support is required to fully unleash the potential of cloud FPGAs. Nevertheless, existing FPGA virtualization solutions only support a homogeneous FPGA cluster comprising identical FPGA devices. Representative work such as ViTAL provides sufficient system support for scale-out acceleration and improves the overall resource utilization through a fine-grained spatial sharing. While these existing solutions (including ViTAL) can efficiently virtualize a homogeneous cluster, it is hard to extend them to virtualizing a heterogeneous cluster which comprises multiple types of FPGAs. We expect the future cloud FPGAs are likely to be more heterogeneous due to hardware rolling upgrade.In this paper, we rethink FPGA virtualization from ground up and propose Hetero-ViTAL to virtualize heterogeneous FPGA clusters. We identify the conflicting requirements of runtime management and offline compilation when designing the abstraction for a heterogeneous cluster, which is also the fundamental reason why the single-level abstraction as proposed in ViTAL (and other prior works) cannot be trivially extended to the heterogeneous case. To decouple these conflicting requirements, we provide a two-level system abstraction in Hetero-ViTAL. Specifically, the high-level abstraction is FPGA-agnostic and provides a simple and homogeneous view of the FPGA resources to simplify the runtime management. On the contrary, the low-level abstraction is FPGA-specific and exposes sufficient spatial resource constraints to the compilation framework to ensure the mapping quality. Rather than simply adding a layer on top of the single-level abstraction as proposed in ViTAL and other prior work, we judiciously determine how much hardware details should be exposed at each level to balance the management complexity, mapping quality and compilation cost. We then develop a compilation framework to map applications onto this two-level abstraction with several optimization techniques to further improve the mapping quality. We also provide a runtime management policy to alleviate the fragmentation issue, which becomes more severe in a heterogeneous cluster due to the distinct resource capacities of diverse FPGAs.We evaluate Hetero-ViTAL on a custom-built FPGA cluster and demonstrate its effectiveness using machine learning and image processing applications. Results show that Hetero-ViTAL reduces the average response time (a critical metric for QoS) by 79.2{\%} for a heterogeneous cluster compared to the non-virtualized baseline. When virtualizing a homogeneous cluster, Hetero-ViTAL also reduces the average response time by 42.0{\%} compared with ViTAL due to a better system design.},
author = {Zha, Yue and Li, Jing},
doi = {10.1109/ISCA52012.2021.00044},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Zha, Li - 2021 - Hetero-ViTAL A virtualization stack for heterogeneous FPGA clusters.pdf:pdf},
isbn = {9781665433334},
issn = {10636897},
journal = {Proceedings - International Symposium on Computer Architecture},
mendeley-groups = {ACM{\_}FPGA22/late,Actionlib/Hardware},
pages = {470--483},
publisher = {IEEE},
title = {{Hetero-ViTAL: A virtualization stack for heterogeneous FPGA clusters}},
volume = {2021-June},
year = {2021}
}
@article{Adetomi2018,
abstract = {The partitioning of computing platforms is a wellknown technique for achieving fault isolation and fault tolerance in space avionics. With the advent of large-capacity and partially reconfigurable FPGAS, partitioning has been proposed at the System-on-Chip (SoC) level. Howeverfixed hardware partitions in a SoC, such as those in slotted reconfigurable architectures, arenot effective in coping with permanent chip damage provoked by cumulative space radiation, thereason being that a single damaged on-chip resource in one partition can prevent the use of that entire partition. In this paper, we discuss how to use R3TOS (Reliable Reconfigurable Real-Time Operating System) to implement a dynamically-partitioned computing platform on a Xilinx Zynq SoC that processes science data delivered by a NASA Fourier transform spectrometer. Unlikein related approaches, R3TOS avoids fixed partitions by harnessing the Zynq's configuration memory for exchanging data among the partitions. This enables us to achieve higher levels of flexibility in the spectrometer avionics, which results in a more effective capability to withstand chip damage. We have simulated different chip damage scenarios and checked that an R3TOS-based prototypic avionics system can tolerate on average around 13{\%} more on-chip damaged resources than a traditional fixed slotted solution.},
author = {Adetomi, Adewale and Enemali, Godwin and Iturbe, Xabier and Arslan, Tughrul and Keymeulen, Didier},
doi = {10.1109/AHS.2018.8541369},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Adetomi et al. - 2018 - R3TOS-Based Integrated Modular Space Avionics for On-Board Real-Time Data Processing.pdf:pdf},
isbn = {9781538677537},
journal = {2018 NASA/ESA Conference on Adaptive Hardware and Systems, AHS 2018},
keywords = {Autonomous System,Reconfigurable Hardware,Reconfigurable Operating System,ReliabilityAvionics},
mendeley-groups = {ACM{\_}FPGA22/late,Actionlib/Hardware},
pages = {1--8},
publisher = {IEEE},
title = {{R3TOS-Based Integrated Modular Space Avionics for On-Board Real-Time Data Processing}},
year = {2018}
}
@article{Andrews2005,
abstract = {This paper describes the hardware/software co-design of a multithreaded RTOS kernel on a new Xilinx Virtex II Pro FPGA. Our multithreaded RTOS kernel is an integral part of our hybrid thread programming model being developed for hybrid systems which are comprised of both sofiware resident and hardware resident concurrently executing threads. Additionally, we provide new interrupt semantics by migrating uncontrollable asynchronous interrupt invocations into controllable, priority based thread scheduling requests. Performance tests verify our hardware/software codesign approach provides significantly tighter bounds on scheduling precision and significant jitter reduction when compared to traditionally implemented RTOS kernels. It also eliminates the jitter associated with asynchronous interrupt invocations. {\textcopyright} 2005 IEEE.},
author = {Andrews, David and Peck, Wesley and Agron, Jason and Preston, Keith and Komp, Ed and Finley, Mike and Sass, Ron},
doi = {10.1109/etfa.2005.1612697},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Andrews et al. - 2005 - hthreads A hardwaresoftware co-designed multithreaded RTOS kernel.pdf:pdf},
isbn = {078039402X},
journal = {IEEE International Conference on Emerging Technologies and Factory Automation, ETFA},
mendeley-groups = {Actionlib/RTOS},
pages = {331--338},
title = {{hthreads: A hardware/software co-designed multithreaded RTOS kernel}},
volume = {2 2 OF 2 V},
year = {2005}
}
@article{Golson1994,
abstract = {The authors report the structural properties and residual stresses of 500-nm-thick nanocrystalline Pd and PdAu films on compliant substrates prepared by magnetron sputtering as a function of the pressure of the Ar-sputtering gas. Films were analyzed by x-ray diffraction, cross-sectional transmission electron microscopy, and x-ray photoelectron spectroscopy. At low pressures the metal films exhibit strong compressive stresses, which rapidly change to highly tensile with increasing pressure, and then gradually decrease. Along with this effect a change in microstructure is observed from a dense equiaxed structure at low pressures to distinctive columns with reduced atomic density at the column walls at higher pressures. The preparation of nearly stress-free dense nanocrystalline films is demonstrated. (C) 2011 American Vacuum Society. DOI: 10.1116/1.3554265},
author = {Golson, Steve},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Golson - 1994 - State machine design techniques for Verilog and VHDL.pdf:pdf},
isbn = {0210131011},
issn = {07342101},
journal = {Synopsys Journal of HighLevel Design},
mendeley-groups = {Actionlib/Circuits},
pages = {1--20},
title = {{State machine design techniques for Verilog and VHDL}},
url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.126.4904{\&}rep=rep1{\&}type=pdf},
volume = {9},
year = {1994}
}
@article{Chapin1996,
author = {Chapin, Steve J.},
doi = {10.1145/234313.234410},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Chapin - 1996 - Distributed and Multiprocessor Scheduling.pdf:pdf},
issn = {15577341},
journal = {ACM Computing Surveys},
mendeley-groups = {Actionlib/Circuits},
number = {1},
pages = {233--235},
title = {{Distributed and Multiprocessor Scheduling}},
volume = {28},
year = {1996}
}
@article{Oh1999,
abstract = {In this paper, we propose a fast and simple heuristic for the cosynthesis problem targeting the system-on-chip (SOC) design. The proposed algorithm covers from implementation selection and resource sharing problem in SOC design to PE selection problems in distributed heterogeneous embedded (DHE) system design. The proposed solution also considers multiple design objectives. Through benchmark experimentation, it is proven that the proposed solution produces solutions of equivalent quality to the previously published results in the DHE design. Its execution speed is several orders of magnitude smaller for large examples. We envision that the proposed approach will be one of significant cosynthesis researches in the SOC design. In the DHE design, the proposed approach could be used as an initial solution to a probabilistic algorithm guaranteeing to obtain a better solution.},
author = {Oh, Hyunok and Ha, Soonhoi},
doi = {10.1145/301177.301524},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Oh, Ha - 1999 - Hardware-software cosynthesis technique based on heterogeneous multiprocessor scheduling.pdf:pdf},
journal = {Hardware/Software Codesign - Proceedings of the International Workshop},
mendeley-groups = {Actionlib/Circuits},
pages = {183--187},
title = {{Hardware-software cosynthesis technique based on heterogeneous multiprocessor scheduling}},
year = {1999}
}
@article{Trimberger,
author = {Trimberger, Steve},
file = {:home/ziyuan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Trimberger - Unknown - m.pdf:pdf},
mendeley-groups = {Actionlib/Circuits},
title = {{Scheduling Designs into a Time-Multiplexed FPGA}}
}
@inproceedings{dodiu2012custom,
  title={Custom designed CPU architecture based on a hardware scheduler and independent pipeline registers-architecture description},
  author={Dodiu, Eugen and Gaitan, Vasile Gheorghita and Graur, Adrian},
  booktitle={2012 Proceedings of the 35th International Convention MIPRO},
  pages={859--864},
  year={2012},
  organization={IEEE}
}
@misc{microCOS,
  title = {microCOS document},
  howpublished = {\url{https://www.silabs.com/developers/micrium}},
  note = {Accessed: 2022-05-30}
}